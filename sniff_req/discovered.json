{
  "frr.frr": [],
  "arista.eos": [
    "EOS v4.12 or greater"
  ],
  "netbox.netbox": [
    "pynetbox"
  ],
  "amazon.aws": [
    "boto3",
    "botocore",
    "must have public internet connectivity",
    "botocore>=1.10.0",
    "whitelisting in configuration - see examples section below for details.",
    "botocore>=1.5.45",
    "boto3 >= 1.0.0",
    "python >= 2.6",
    "boto"
  ],
  "cyberark.pas": [],
  "azure.azcollection": [],
  "dellemc_networking.os10": [],
  "google.cloud": [
    "requests >= 2.18.4",
    "google-auth >= 1.3.0",
    "python >= 2.6",
    "google-cloud-storage >= 1.2..0"
  ],
  "ngine_io.exoscale": [],
  "ngine_io.cloudstack": [
    "yaml"
  ],
  "ngine_io.vultr": [],
  "awx.awx": [
    "pytz",
    "python.dateutil >= 2.7.0",
    "ansible-tower-cli >= 3.3.0",
    "six.moves.StringIO",
    "sys",
    "ansible-tower-cli >= 3.0.2",
    "pyyaml"
  ],
  "cisco.intersight": [],
  "cisco.mso": [],
  "cisco.iosxr": [
    "ncclient >= 0.5.3 when using netconf",
    "lxml >= 4.1.1 when using netconf",
    "base64 when using I(public_key_contents) or I(public_key)",
    "paramiko when using I(public_key_contents) or I(public_key)"
  ],
  "cisco.nxos": [
    "paramiko (required when file_pull is False)",
    "SCPClient (required when file_pull is False)",
    "pexpect (required when file_pull is True)"
  ],
  "cisco.aci": [
    "lxml (when using XML payload)",
    "xmljson >= 0.1.8 (when using XML payload)",
    "python 2.7+ (when using xmljson)",
    "python-dateutil"
  ],
  "cisco.ios": [],
  "cisco.meraki": [],
  "cisco.asa": [],
  "cisco.ucs": [
    "ucsmsdk"
  ],
  "cloudscale_ch.cloud": [],
  "ibm.qradar": [],
  "ansible.posix": [
    "whitelisting in configuration",
    "set as main display callback",
    "whitelisting in configuration - see examples section below for details.",
    "whitelist in configuration",
    "cgroups",
    "set as stdout in configuration",
    "Set as stdout in config",
    "libselinux-python",
    "at",
    "libsemanage-python"
  ],
  "ansible.netcommon": [
    "ncclient",
    "napalm",
    "scp",
    "ncclient (>=v0.5.2)",
    "jxmlease"
  ],
  "ansible.windows": [
    "As this module used newer cmdlets like New-SmbShare this can only run on Windows 8 / Windows 2012 or newer.",
    "This is due to the reliance on the WMI provider MSFT_SmbShare U(https://msdn.microsoft.com/en-us/library/hh830471) which was only added with these Windows releases."
  ],
  "vyos.vyos": [],
  "theforeman.foreman": [
    "requests >= 1.1",
    "whitelisting in configuration",
    "requests (python library)",
    "ipaddress",
    "python-debian (For deb Package upload)",
    "rpm (For rpm upload)"
  ],
  "splunk.es": [],
  "skydive.skydive": [
    "skydive-client"
  ],
  "containers.podman": [
    "Podman installed on host"
  ],
  "junipernetworks.junos": [
    "ncclient (>=v0.6.4)",
    "ncclient (>=v0.5.2)",
    "xmltodict (>=0.12.0)",
    "junos-eznc",
    "jxmlease",
    "xmltodict (>=0.12)"
  ],
  "community.azure": [],
  "community.general": [
    "memcache (python lib)",
    "redis>=2.4.5 (python lib)",
    "infoblox_client",
    "etcd3 >= 0.10",
    "infoblox-client",
    "lmdb (python library https://lmdb.readthedocs.io/en/release/)",
    "dns/dns.resolver (python library)",
    "hvac (python library)",
    "hvac 0.7.0+ (for namespace support)",
    "hvac 0.9.6+ (to avoid all deprecation warnings)",
    "botocore (only if inferring aws params from boto)",
    "boto3 (only if using a boto profile)",
    "lpass (command line utility)",
    "must have already logged into lastpass",
    "pychef (python library https://pychef.readthedocs.io `pip install pychef`)",
    "C(op) 1Password command line utility. See U(https://support.1password.com/command-line/)",
    "CyberArk AIM tool installed",
    "dnspython (python library, http://www.dnspython.org/)",
    "redis (python library https://github.com/andymccurdy/redis-py/)",
    "keyring (python library)",
    "The controlling host running Ansible has a Conjur identity. (More: U(https://docs.conjur.org/Latest/en/Content/Get%20Started/key_concepts/machine_identity.html))",
    "python >= 2.6",
    "requests >= 2.18.4",
    "google-auth >= 1.3.0",
    "credstash (python library)",
    "hiera (command line utility)",
    "python-consul python library U(https://python-consul.readthedocs.io/en/latest/#installation)",
    "openshift >= 0.6",
    "PyYAML >= 3.11",
    "python >= 2.7",
    "linode_api4 >= 2.0.0",
    "nmap CLI installed",
    "L(Docker Machine,https://docs.docker.com/machine/)",
    "python-gitlab > 1.8.0",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 1.10.0",
    "whitelisting in configuration",
    "set as main display callback",
    "whitelist in configuration",
    "LogDNA Python Library (https://github.com/logdna/python)",
    "xmpp (python lib https://github.com/ArchipelProject/xmpppy)",
    "set as stdout callback in ansible.cfg  (stdout_callback = counter_enabled)",
    "set as stdout callback in configuration",
    "set as stdout in configuration",
    "whitelist in configuration.",
    "prettytable (python lib)",
    "the '/usr/bin/say' command line program (standard on macOS) or 'espeak' command line program",
    "set as stdout_callback in configuration",
    "Whitelist in configuration",
    "A writeable /var/log/ansible/hosts directory by the user executing Ansible on the controller",
    "certifi (python library)",
    "flatdict (python library), if you want to use the 'flatten' option",
    "logstash (python library)",
    "Whitelisting this callback plugin",
    "Create a HTTP collector source in Sumologic and specify a custom timestamp format of C(yyyy-MM-dd HH:mm:ss ZZZZ) and a custom timestamp locator of C(\"timestamp\": \"(.*)\")",
    "cgroups",
    "prettytable (python library)",
    "Create a HTTP Event Collector in Splunk",
    "Define the url and token in ansible.cfg",
    "serverless",
    "yaml",
    "influxdb >= 0.9",
    "cron",
    "profitbricks",
    "keystoneauth1 >= 3.6.0",
    "matrix-client (Python library)",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 2.1.0",
    "Docker API >= 1.25",
    "netapp_lib",
    "google-api-python-client >= 1.6.2",
    "google-auth >= 0.9.0",
    "google-auth-httplib2 >= 0.0.2",
    "ovirtsdk",
    "lxc >= 1.0 # OS package",
    "python >= 2.6 # OS Package",
    "lxc-python2 >= 0.1 # PIP Package from https://github.com/lxc/python2-lxc",
    "unixODBC",
    "pyodbc",
    "Python >= 2.6",
    "packet-python >= 1.35",
    "etcd3",
    "nailgun >= 0.28.0",
    "datetime",
    "jsondiff",
    "pyyaml",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 1.8.0 (use L(docker-py,https://pypi.org/project/docker-py/) for Python 2.6)",
    "docker-compose >= 1.7.0",
    "Docker API >= 1.20",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 2.4.0",
    "libselinux",
    "policycoreutils",
    "hpOneView >= 3.1.1",
    "apache-libcloud >= 1.2.0",
    "terraform",
    "python xmpp (xmpppy)",
    "zypper >= 1.0  # included in openSUSE >= 11.1 or SUSE Linux Enterprise Server/Desktop >= 11.0",
    "python-xml",
    "rpm",
    "libselinux-python",
    "policycoreutils-python",
    "The requested pip executables must be installed on the target.",
    "Docker API >= 1.21",
    "requests (either >= 2.0.0 for Python 3, or >= 1.0.0 for Python 2)",
    "python = 2.7",
    "requests >= 2.5.0",
    "clc-sdk",
    "virtualenv",
    "1and1",
    "datadog",
    "PyGithub >= 1.3.5",
    "python-oca",
    "github3.py >= 1.0.0a3",
    "Docker API >= 1.24",
    "munch",
    "python >= 2.7.9",
    "hpOneView >= 4.0.0",
    "nc-dnsapi >= 0.1.3",
    "ipaddress",
    "apache-libcloud >= 0.19.0",
    "supervisorctl",
    "flatpak",
    "python >= 3.6",
    "footmark >= 1.19.0",
    "spotinst_sdk >= 1.0.38",
    "open_iscsi library and tools (iscsiadm)",
    "pyone",
    "atomic",
    "php",
    "composer installed in bin path (recommended /usr/local/bin)",
    "heroku3",
    "pysnmp",
    "packet-python >= 1.40",
    "itertools",
    "XenAPI",
    "dpkg-divert >= 1.15.0 (Debian family)",
    "openshift >= 0.8.2",
    "python-gitlab python module",
    "ovh",
    "ohai",
    "layman python module",
    "gentoolkit",
    "python >= 2.7.5",
    "lxml",
    "boto if using a S3 repository (s3://...)",
    "say or espeak or espeak-ng",
    "python-hpilo",
    "Univention",
    "hpOneView >= 2.0.1",
    "Uses tools related to the I(fstype) (C(mkfs)) and C(blkid) command. When I(resizefs) is enabled, C(blockdev) command is required too.",
    "linode-python",
    "passlib>=1.6",
    "pubnub_blocks_client >= 1.0",
    "socket",
    "apache-libcloud >= 0.13.3, >= 0.17.0 if using JSON credentials",
    "homebrew must already be installed on the target system",
    "apache-libcloud >= 0.13.3, >= 0.17.0 if using JSON credentials, >= 0.20.0 if using preemptible option",
    "facter",
    "ruby-json",
    "git",
    "macOS 10.11+",
    "mas-cli (U(https://github.com/mas-cli/mas)) 1.5.0+ available as C(mas) in the bin path",
    "The Apple ID to use already needs to be signed in to the Mac App Store (check with C(mas account)).",
    "lxml >= 2.3.0",
    "base64",
    "hashlib",
    "ip",
    "python-consul",
    "pyhcl",
    "requests",
    "subscription-manager",
    "python >= 2.5",
    "json",
    "firewalld >= 0.2.11",
    "a2enmod",
    "a2dismod",
    "google-auth >= 0.5.0",
    "google-cloud-spanner >= 0.23.0",
    "L(Python bindings for docker credentials store API) >= 0.2.1 (use L(docker-pycreds,https://pypi.org/project/docker-pycreds/) when using Docker SDK for Python < 4.0.0)",
    "mosquitto",
    "python-taiga",
    "xfsprogs",
    "npm installed in bin path (recommended /usr/local/bin)",
    "C(ufw) package",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 1.10.0 (use L(docker-py,https://pypi.org/project/docker-py/) for Python 2.6)",
    "The docker server >= 1.9.0",
    "python-gitlab >= 1.5.0",
    "Solaris 10 or 11",
    "netstat",
    "A system with an active nosh service manager, see Notes for further information.",
    "PagerDuty API access",
    "manageiq-client",
    "apache-libcloud",
    "pyghmi",
    "homebrew",
    "ovirt-engine-sdk-python",
    "dnsimple >= 1.0.0",
    "python-ldap",
    "python-jenkins >= 0.4.12",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 2.0.2",
    "pypureomapi",
    "boto >= 2.9",
    "Yarn installed in bin path (typically /usr/local/bin)",
    "The docker server >= 1.10.0",
    "gunicorn",
    "A ZFS/OpenZFS implementation that supports delegation with `zfs allow`, including: Solaris >= 10, illumos (all versions), FreeBSD >= 8.0R, ZFS on Linux >= 0.7.0.",
    "proxmoxer",
    "PyYAML",
    "kmod-kvdo",
    "vdo",
    "hpOneView >= 3.1.0",
    "redis",
    "An OpenWrt system (with python)",
    "google-auth >= 1.0.0",
    "bash",
    "google-cloud-pubsub >= 0.22.0",
    "lldpctl",
    "psycopg2",
    "openssl",
    "keytool",
    "Valid Uptime Robot API Key",
    "requests >= 2.0.0",
    "dopy",
    "puppet",
    "Slackware >= 12.2",
    "dnspython",
    "kazoo >= 2.1",
    "softlayer >= 4.1.1",
    "psutil(python module)",
    "GlusterFS > 3.2",
    "This module requires parted version 1.8.3 and above",
    "align option (except 'undefined') requires parted 2.1 and above",
    "If the version of parted is below 3.1, it requires a Linux version running the sysfs file system C(/sys/).",
    "sendgrid python library",
    "ipwcli (installed on Ericsson IPWorks)",
    "administrator rights on the GitLab server",
    "django",
    "make",
    "This pingdom python library: https://github.com/mbabineau/pingdom-python",
    "dbus",
    "NetworkManager-libnm (or NetworkManager-glib on older systems)",
    "nmcli",
    "xmljson >= 0.1.8",
    "ovh >  0.3.5",
    "omsdk",
    "mysql (command line binary)",
    "mysqldump (command line binary)",
    "hpilo",
    "hmac",
    "capacity",
    "packet-python",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 2.6.0",
    "Docker API >= 1.30",
    "paramiko",
    "pycdlib",
    "Red Hat Enterprise Linux 6+ with subscription-manager installed",
    "influxdb >= 0.9 & <= 1.2.4",
    "Either 7z (from I(7zip) or I(p7zip) package)",
    "Or mount capabilities (root-access, or CAP_SYS_ADMIN capability on Linux)",
    "ovh >=  0.4.8",
    "pymssql",
    "opkg",
    "python",
    "update-alternatives",
    "footmark >= 1.13.0",
    "pushbullet.py",
    "hponcfg tool",
    "rhnreg_ks",
    "either libxml2 or lxml",
    "pyhelm",
    "grpcio",
    "apache-libcloud >= 0.17.0",
    "ejabberd with mod_admin_extra",
    "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 2.0.0"
  ],
  "community.network": [
    "pan-python",
    "avisdk",
    "Jinja2",
    "cvprac >= 0.7.0",
    "nitro python sdk",
    "pan-python can be obtained from PyPI U(https://pypi.org/project/pan-python/)",
    "pandevice can be obtained from PyPI U(https://pypi.org/project/pandevice/)",
    "xmltodict can be obtained from PyPI U(https://pypi.org/project/xmltodict/)",
    "ncclient",
    "Cisco NSO version 3.4.12 or higher, 4.1.9 or higher, 4.2.6 or higher, 4.3.7 or higher, 4.4.5 or higher, 4.5 or higher.",
    "Cisco NSO version 3.4.12 or higher, 4.2.7 or higher, 4.3.8 or higher, 4.4.3 or higher, 4.5 or higher.",
    "vdirect-client >= 4.9.0-post4",
    "paramiko",
    "python >= 3.5",
    "firepower-kickstart",
    "requests",
    "requests_toolbelt",
    "cps",
    "cps_object",
    "cps_utils",
    "Cisco NSO version 3.4 or higher.",
    "Python 2.7",
    "Supports Nuage VSP 4.0Rx & 5.x.y",
    "Proper VSPK-Python installed for your Nuage version",
    "Tested with NuageX U(https://nuagex.io)",
    "xmltodict can be obtains from PyPI U(https://pypi.org/project/xmltodict/)"
  ],
  "community.grafana": [
    "whitelisting in configuration"
  ],
  "community.rabbitmq": [
    "The python pika package U(https://pypi.org/project/pika/).",
    "requests >= 1.0.0",
    "pika"
  ],
  "community.libvirt": [
    "libvirt-python",
    "python >= 2.6",
    "python-libvirt",
    "python-lxml"
  ],
  "community.mongodb": [
    "pymongo>=3",
    "pymongo >= 2.4 (python library)",
    "pymongo"
  ],
  "community.aws": [
    "The remote EC2 instance must be running the AWS Systems Manager Agent (SSM Agent).",
    "The control machine must have the aws session manager plugin installed.",
    "The remote EC2 linux instance must have the curl installed.",
    "boto3",
    "botocore",
    "boto3 >= 1.0.0",
    "python >= 2.6",
    "json",
    "boto",
    "boto3 >= 1.4.4",
    "boto3>=1.4.4",
    "boto >= 2.37.0",
    "boto3 >= 1.4.4 (for tagging)",
    "python >= 2.7",
    "boto3 >= 1.5.0",
    "boto3 >= 1.11.15",
    "boto3>=1.6",
    "botocore>=1.10.26",
    "python-dateutil",
    "botocore>=1.5.24",
    "cryptography",
    "boto3 >= 1.6.0",
    "botocore>=1.10.0"
  ],
  "community.windows": [
    "python-ldap",
    "Windows 8.1 / Windows 2012 (NT 6.2)",
    "Windows Server 2008R2 (6.1) or higher.",
    "The Windows Feature \"RDS-Gateway\" must be enabled.",
    "PSCX",
    "This module requires Windows Management Framework 5 or later.",
    "C(PowerShellGet) module v1.6.0+",
    "C(PowerShellGet) module",
    "nssm >= 2.24.0 # (install via M(chocolatey.chocolatey.win_chocolatey)) C(win_chocolatey: name=nssm)",
    "defrag.exe",
    "Pester",
    "This module requires Windows Server 2012R2 or Newer",
    "This module requires Windows Server 2012 or Newer",
    "Microsoft PsExec",
    "PowerShell Module L(PowerShellGet >= 1.6.0,https://www.powershellgallery.com/packages/PowerShellGet/)",
    "PowerShell Module L(PackageManagement >= 1.1.7,https://www.powershellgallery.com/packages/PackageManagement/)",
    "PowerShell Package Provider C(NuGet) >= 2.8.5.201",
    "This module requires Windows 8, Server 2012, or newer.",
    "pypsexec",
    "smbprotocol[kerberos] for optional Kerberos authentication"
  ],
  "community.zabbix": [
    "python >= 2.6",
    "zabbix-api >= 0.5.4",
    "python >= 2.7",
    "zabbix-api >= 0.5.3",
    "pydotplus",
    "webcolors",
    "Pillow",
    "Graphviz"
  ],
  "community.kubernetes": [
    "kubectl (go binary)",
    "python >= 2.7",
    "openshift >= 0.6",
    "PyYAML >= 3.11",
    "helm (https://github.com/helm/helm/releases)",
    "yaml (https://pypi.org/project/PyYAML/)",
    "openshift == 0.4.3",
    "openshift >= 0.6.2",
    "urllib3",
    "requests",
    "requests-oauthlib"
  ],
  "community.vmware": [
    "pyvmomi (Python library)",
    "requests (Python library)",
    "Python >= 2.7",
    "PyVmomi",
    "requests >= 2.3",
    "vSphere Automation SDK - For tag feature",
    "vCloud Suite SDK - For tag feature",
    "python >= 2.6",
    "vSphere Automation SDK",
    "Tested on ESXi 5.5 and 6.5.",
    "PyVmomi installed.",
    "python >= 2.7",
    "Tested on vSphere 5.5 and 6.5",
    "PyVmomi installed",
    "pyVmomi",
    "python > =  2.6",
    "pyvmomi",
    "pyvcloud <= 18.2.2",
    "ssl",
    "socket",
    "hashlib",
    "requests",
    "VMware vSAN Python's SDK"
  ],
  "check_point.mgmt": [],
  "ovirt.ovirt": [
    "ovirt-engine-sdk-python >= 4.2.4",
    "python >= 2.7",
    "ovirt-engine-sdk-python >= 4.4.0"
  ],
  "openvswitch.openvswitch": [
    "ovs-vsctl",
    "ovs-vsctl >= 2.3.3"
  ],
  "fortinet.fortimanager": [],
  "fortinet.fortios": [
    "fortiosapi>=0.9.8"
  ]
}